{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/Images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Orders/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Orders/Order.module.css","containers/Auth/Auth.module.css","store/utility.js","store/reducers/burgerBuilder.js","store/actions/actionTypes.js","store/reducers/order.js","store/reducers/auth.js","hoc/Auxi/Auxi.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Orders/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Orders/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","updateObject","oldObject","updatedProperties","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","cheese","salad","meat","bacon","reducer","state","actions","type","updatedIngredient","ingredientName","updatedIngredients","updatedState","orders","loading","purchased","action","newOrder","orderData","id","orderId","concat","token","userId","authRedirectPath","authStart","authSuccess","idToken","authFail","authLogout","setAuthRedirectPath","path","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","style","height","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","showSideDrawer","SideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","burgerIngredients","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","withRouter","transformedIngredients","Object","keys","map","igKey","Array","_","i","BurgerIngredients","key","reduce","arr","el","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","control","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","orderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","logout","localStorage","removeItem","setAuthRedirectedPath","checkAuthTimeout","expirationTime","dispatch","setTimeout","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","burger","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","OrderSummary","burgerBuilder","ingName","get","then","data","catch","burgerBuilderActions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","inValid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","validationError","ValidationError","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipcode","minLength","maxLength","country","email","delieveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","config","form","onSubmit","formElement","post","console","log","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","match","component","ingredientsName","amount","ingredientsOutput","ig","display","border","padding","Order","Orders","onFetchOrders","queryParams","fetchedOrders","fetchOrdersFail","Auth","controls","isEmail","password","isSignup","controlName","updateControls","switchAuthModeHandler","submitHandler","onAuth","buildingBurger","test","errorMessage","authRedirect","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","err","actionTypes","Logout","onLogout","App","onTryAutoSignup","routes","getItem","getSeconds","Boolean","window","location","hostname","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6b598c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__3GFf4\",\"BreadTop\":\"BurgerIngredients_BreadTop__1GR0Q\",\"Seeds1\":\"BurgerIngredients_Seeds1__1slsV\",\"Seeds2\":\"BurgerIngredients_Seeds2__2cQpV\",\"Meat\":\"BurgerIngredients_Meat__2gl_H\",\"Cheese\":\"BurgerIngredients_Cheese__1imjH\",\"Salad\":\"BurgerIngredients_Salad__7xusS\",\"Bacon\":\"BurgerIngredients_Bacon__1LVgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__uMQCg\",\"Open\":\"SideDrawer_Open__CfzKT\",\"Close\":\"SideDrawer_Close__hiMMR\",\"Logo\":\"SideDrawer_Logo__IbKRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__267Kx\",\"Label\":\"Input_Label__10fWd\",\"ValidationError\":\"Input_ValidationError__Q9BOa\",\"InputElement\":\"Input_InputElement__3PmPP\",\"Invalid\":\"Input_Invalid__1M9PE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__ROOJs\",\"Label\":\"BuildControl_Label__1jrhc\",\"Less\":\"BuildControl_Less__o7Mp5\",\"More\":\"BuildControl_More__xBrH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1wKCd\",\"Logo\":\"Toolbar_Logo__1trI7\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1IDY-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1NTlB\",\"active\":\"NavigationItem_active__obeNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2Hsmt\",\"OrderButton\":\"BuildControls_OrderButton__KAFOK\",\"enable\":\"BuildControls_enable__2wvZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__gZV47\",\"Success\":\"Button_Success__2XbzB\",\"Danger\":\"Button_Danger__3EAbI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3ypnG\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3RRM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3PAXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2NhQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Zjpiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1LzcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__13AbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__X8vbI\",\"load2\":\"Spinner_load2__3989h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1hMLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1gKle\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3BzWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1QSTW\"};","export const updateObject = (oldObject, updatedProperties) => {\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error:false,\r\n    building:false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {           //Set global bcz it will not be changed\r\n    cheese:0.5, \r\n    salad:0.4,\r\n    meat:1.3,\r\n    bacon:0.7\r\n}\r\n\r\nconst reducer = (state = initialState, actions) => {\r\n    switch(actions.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n            const updatedIngredient= { [actions.ingredientName]: state.ingredients[actions.ingredientName] + 1}\r\n            const updatedIngredients = updateObject(state.ingredients,updatedIngredient);\r\n            const updatedState = {\r\n                ingredients: updatedIngredients,\r\n                totalPrice:state.totalPrice + INGREDIENT_PRICES[actions.ingredientName] ,\r\n                building: true\r\n            }\r\n            return updateObject(state,updatedState);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return{\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [actions.ingredientName]:state.ingredients[actions.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[actions.ingredientName] ,\r\n                building: true\r\n            };\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return{\r\n                ...state,\r\n                ingredients: {                                      //Doing this way because to order the ingredients in the same order as given here\r\n                    salad: actions.ingredients.salad,\r\n                    bacon: actions.ingredients.bacon,\r\n                    cheese: actions.ingredients.cheese,\r\n                    meat: actions.ingredients.meat\r\n                },\r\n                totalPrice:4,\r\n                error: false,\r\n                building: false\r\n            };\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return{\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDER_START = 'FETCH_ORDER_START';\r\nexport const FETCH_ORDER_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDER_FAIL = 'FETCH_ORDER_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.PURCHASE_INIT:\r\n            return{\r\n                ...state,\r\n                purchased: false\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId,\r\n            }\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case actionTypes.FETCH_ORDER_START:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case actionTypes.FETCH_ORDER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            };\r\n        case actionTypes.FETCH_ORDER_FAIL:\r\n            return{\r\n                ...state,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/' \r\n};\r\n\r\nconst authStart = (state,action) => {\r\n    return updateObject(state,{error:null, loading: true});\r\n};\r\n\r\nconst authSuccess = (state,action) => {\r\n    return updateObject(state,{\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authFail = (state,action) => {\r\n    return updateObject(state,{\r\n        error:action.error, \r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state,{ userId: null, token: null});\r\n}\r\n\r\nconst setAuthRedirectPath = (state,action) => {\r\n    return updateObject(state,{ authRedirectPath: action.path});\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","const aux=(props)=>props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/Images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo=(props)=>(\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"My Burger\" style={{height:props.height}}/>\r\n    </div>\r\n);\r\n\r\nexport default logo","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst navigationItem=(props)=>(\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n        </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems=(props)=>(\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        {!props.isAuthenticated\r\n            ?<NavigationItem link=\"/auth\">Authentication</NavigationItem>\r\n            :<NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props)=>(\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\n\r\nconst toolbar = (props)=>(\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props)=>(\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null \r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxi/Auxi'; //here Aux stands for auxilliary\r\n\r\nconst sideDrawer = (props)=>{\r\n\r\n    let attachedClasses = [classes.SideDrawer,classes.Close];\r\n    if(props.open){\r\n        attachedClasses=[classes.SideDrawer,classes.Open];\r\n    }\r\n\r\n    return(\r\n        <Aux>\r\n        <Backdrop show={props.open} clicked={props.closed} />\r\n        <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n            <div className={classes.Logo} >\r\n                <Logo />\r\n            </div>\r\n\r\n            <nav> \r\n                <NavigationItems isAuthenticated={props.isAuth}/>\r\n            </nav>\r\n        </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport {connect} from 'react-redux';\r\nimport Aux from '../../hoc/Auxi/Auxi';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component{\r\n\r\n    state={\r\n        showSideDrawer:false,   \r\n    }\r\n\r\n    SideDrawerClosedHandler=()=>{\r\n        this.setState({showSideDrawer:false});\r\n    }\r\n\r\n    sideDrawerToggleHandler=()=>{\r\n        this.setState((prevState)=>{\r\n            return {showSideDrawer:!prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(<Aux>\r\n                    <Toolbar \r\n                        isAuth={this.props.isAuthenticated}\r\n                        drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                    <SideDrawer \r\n                        isAuth={this.props.isAuthenticated}\r\n                        closed={this.SideDrawerClosedHandler} \r\n                        open={this.state.showSideDrawer}/>\r\n                    \r\n                    <main className={classes.Content}>\r\n                        {this.props.children}\r\n                    </main>\r\n                </Aux>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredients.module.css';\r\n\r\nconst burgerIngredients = (props) =>{\r\n    let ingredient = null;\r\n\r\n    switch(props.type){\r\n        case('bread-bottom'):\r\n            ingredient=<div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case('bread-top'):\r\n            ingredient=(\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case('meat'):\r\n            ingredient=<div className={classes.Meat}></div>;\r\n            break;\r\n        case('cheese'):\r\n            ingredient=<div className={classes.Cheese}></div>;\r\n            break;\r\n        case('bacon'):\r\n            ingredient=<div className={classes.Bacon}></div>;\r\n            break;\r\n        case('salad'):\r\n            ingredient=<div className={classes.Salad}></div>;\r\n            break;       \r\n        default:\r\n            ingredient=null;         \r\n    }\r\n    return ingredient;\r\n}\r\n\r\nburgerIngredients.propTypes={\r\n    type:PropTypes.string.isRequired\r\n};\r\n\r\nexport default burgerIngredients;","import React from 'react'; //React imported to return JSX code\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst Burger = (props)=>{\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients)   //Object function will convert ingredients object into array of its keys i.e. cheese,salod,etc.,etc.\r\n            .map(igKey=>{\r\n                return [...Array(props.ingredients[igKey])].map((_,i)=>{          //here _ shows that element name is blank as not used and i is index\r\n                    return <BurgerIngredients key={igKey + i} type={igKey}  />    //Whenever use array pass it a key\r\n                });\r\n            })                  //transformedIngredients is an Array of Array of Objects till here\r\n            \r\n            .reduce((arr,el)=>{    //reduce transforms the array in the way we like\r\n                return arr.concat(el);\r\n            },[]);  //this is the initial value passed\r\n    \r\n    if(transformedIngredients.length===0){\r\n        transformedIngredients=<p>Please Add some ingredients!!</p>\r\n    }\r\n\r\n    return(\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredients type='bread-top'/>\r\n            {transformedIngredients}\r\n            <BurgerIngredients type='bread-bottom'/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Burger);      //withRouter added to get the functionality of special props like history ,match also in this props","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props)=>(\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>                \r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst control=[\r\n    {label:\"Cheese\",type:\"cheese\"},\r\n    {label:\"Meat\",type:\"meat\"},\r\n    {label:\"Salad\",type:\"salad\"},\r\n    {label:\"Bacon\",type:\"bacon\"},\r\n];\r\n\r\n\r\nconst buildControls = (props)=>(\r\n    <div className={classes.BuildControls}>\r\n    <p>Current Price : <strong>{props.price.toFixed(2)}</strong></p>\r\n    {control.map(ctrl=>(\r\n        <BuildControl \r\n        key={ctrl.label} \r\n        label={ctrl.label}\r\n        added={()=>props.ingredientAdded(ctrl.type)}\r\n        removed={()=>props.ingredientRemoved(ctrl.type)}\r\n        disabled={props.disabled[ctrl.type]}/>\r\n        )\r\n    )}\r\n    <button \r\n        className={classes.OrderButton}\r\n        disabled={!props.purchasable}\r\n        onClick={props.ordered}>{props.isAuth?'ORDER NOW':'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n    );\r\n        \r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxi/Auxi';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n    //Turned Modal.js from functional component to class component so that we can see if the component should be updated or not and only then render (not unnecessary rendering)\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n            <div \r\n                className={classes.Modal}\r\n                style={{\r\n                    transform:this.props.show ? 'translateY(0)':'translateY(-100vh)',\r\n                    opacity:this.props.show ? '1' : '0'\r\n                }}>\r\n                {this.props.children}\r\n            </div>\r\n        </Aux>);\r\n    }\r\n} \r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props)=>(\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button,classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxi/Auxi';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map((igKey)=>{\r\n            return (<li key={igKey}>\r\n                        <span style={{textTransform:\"capitalize\"}}>{igKey}</span>:{props.ingredients[igKey]}\r\n                    </li>);\r\n        });\r\n\r\n    return(\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with following ingredients : </p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price:{props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to checkout? :</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default orderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxi/Auxi';\r\n\r\nconst withErrorHandler = (WrappedComponent,axios)=>{\r\n    return class extends Component{\r\n        \r\n        state={\r\n            error:null\r\n        }\r\n\r\n        componentWillMount(){\r\n\r\n            this.reqInterceptor = axios.interceptors.request.use(req=>{\r\n                this.setState({error:null});\r\n                return req;\r\n            })\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res=>res,error=>{\r\n                this.setState({error:error});\r\n            })\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n\r\n        }\r\n\r\n        errorConfirmedHandler = ()=>{\r\n            this.setState({error:null});\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <Aux> \r\n                    <Modal \r\n                    show={this.state.error}\r\n                    modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message:null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props}/>\r\n\r\n                </Aux>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://react-my-burger-builder-13255.firebaseio.com/',\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return{\r\n        type:actionTypes.AUTH_START,\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return{\r\n        type:actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return{\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return{\r\n        type:actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const auth = (email,password,isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB9-WRhrIFJiJOk7_kPAv8DSIbQ4NwXhpA';\r\n        if(!isSignup){\r\n            url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB9-WRhrIFJiJOk7_kPAv8DSIbQ4NwXhpA';\r\n        }\r\n\r\n        axios.post(url,authData)\r\n            .then((response)=>{\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken,response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch( err => {\r\n                console.log(err);\r\n                dispatch(authFail(err.response.data.error));\r\n            })\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectedPath = (path) => {\r\n    return{\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const authCheckStatus = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n             dispatch(logout());\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }else{\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                // dispatch(checkAuthTimeout((expirationDate.getSeconds() - new Date().getSeconds()))/1000);\r\n\r\n                const expirationTime = (expirationDate.getSeconds() - new Date().getSeconds())/1000;\r\n\r\n                setTimeout(() => {\r\n                    dispatch(logout());\r\n                }, expirationTime * 5000);\r\n            }\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Aux from '../../hoc/Auxi/Auxi';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as burgerBuilderActions from '../../store/actions/index';\r\nimport axios from '../../axios-order';\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component{\r\n\r\n    state={\r\n        purchasing:false,\r\n    }\r\n\r\n    componentDidMount(){\r\n        // axios.get('https://react-my-burger-builder-13255.firebaseio.com/ingredients.json')\r\n        // .then(response => {\r\n        //     this.setState({ingredients:response.data});\r\n        // })\r\n        // .catch(error=>{\r\n        //     this.setState({error:true});\r\n        // })\r\n\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n        const sum = Object.keys(ingredients)\r\n            // .reduce((sum,el)=>{return sum+ ingredients[el]},0) //My Logic\r\n            .map((igKey)=>{\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum,el)=> {\r\n                return sum + el;\r\n            },0);\r\n        return sum>0;\r\n    }\r\n\r\n    // addIngredientHandler = (type)=>{\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type]=updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + priceAddition;\r\n    //     this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n\r\n    // removeIngredientHandler = (type)=>{\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type]=updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\r\n    //     this.updatePurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    //Arrow function helps in excessing state while other syntax shows error i.e. purcha...(){}\r\n    purchaseHandler=()=>{\r\n        if(this.props.isAuthenticated){\r\n            this.setState({purchasing:true});\r\n        }else{\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = ()=>{\r\n        this.setState({purchasing:false});\r\n    }\r\n\r\n    purchaseContinueHandler = ()=>{\r\n        // alert('You Continue !!');\r\n\r\n        // const queryParams = [];\r\n        // for(let i in this.state.ingredients){\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        // }\r\n        // queryParams.push('price='+this.props.price);\r\n\r\n        // const queryString=queryParams.join('&');\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render(){\r\n\r\n        const disabledInfo={\r\n            ...this.props.ings\r\n        }\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n        //it would be like {'salad':true,'cheese':false,...}\r\n\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger=this.props.error ? <p>Ingredients Can't be loaded</p>:<Spinner />;\r\n        \r\n        if(this.props.ings){\r\n            \r\n            burger=(\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls \r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        disabled={disabledInfo}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price}/>\r\n                </Aux>);\r\n\r\n            orderSummary=<OrderSummary \r\n                        purchaseCancelled={this.purchaseCancelHandler}\r\n                        purchaseContinued={this.purchaseContinueHandler}\r\n                        ingredients={this.props.ings}\r\n                        price={this.props.price}/>;\r\n        }\r\n\r\n        // if(this.state.loading){\r\n        //     orderSummary=<Spinner/>;\r\n        // }\r\n\r\n\r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        isAuthenticated: state.auth.token !== null,\r\n        error: state.burgerBuilder.error\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\r\n        onInitPurchase: () => dispatch(burgerBuilderActions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(burgerBuilderActions.setAuthRedirectedPath(path))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios)); //withErrorHandler is the argument that the connection function call return us","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-order';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return{\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return{\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-my-burger-builder-13255.firebaseio.com/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n        .catch(error=>{\r\n            dispatch(fetchIngredientsFailed());\r\n        })\r\n    };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-order';\r\nimport { useImperativeHandle } from 'react';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token,orderData)\r\n        .then(response=>{\r\n            console.log(response.data);\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n        })\r\n        .catch(error=>{\r\n            dispatch(purchaseBurgerFail(error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return{\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDER_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDER_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth='+token+ '&orderBy=\"userId\"&equalTo=\"'+ userId + '\"';\r\n        axios.get('/orders.json'+ queryParams)\r\n        .then(response => {\r\n            const fetchedOrders=[];\r\n            for(let key in response.data){\r\n                fetchedOrders.push({\r\n                    ...response.data[key],\r\n                    id:key\r\n                })\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders));\r\n        })\r\n        .catch(error=>{\r\n            dispatch(fetchOrdersFail(error));\r\n        });\r\n    };\r\n};\r\n\r\n","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props)=>{\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes Good !!!</h1>\r\n            <div style={{width:'100%', margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) =>{\r\n    let inputElement = null;\r\n\r\n    const inputClasses=[classes.InputElement];\r\n\r\n    if(props.inValid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement=<input \r\n                            className={inputClasses.join(' ')}\r\n                            {...props.elementConfig} \r\n                            value={props.value} \r\n                            onChange={props.changed}/>\r\n            break;\r\n        case('textarea'):\r\n            inputElement=<textarea \r\n                            className={inputClasses.join(' ')}\r\n                            {...props.elementConfig} \r\n                            value={props.value} \r\n                            onChange={props.changed}/>\r\n            break;\r\n        case('select'):\r\n            inputElement=(\r\n                <select \r\n                    className={inputClasses.join(' ')} \r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option=>(\r\n                        <option key={option.value} value={option.value} >{option.displayValue}</option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement=<input className={inputClasses.join(' ')}{...props.elementConfig} value={props.value} onChange={props.changed}/>\r\n    }\r\n\r\n    let validationError = null;\r\n    if (props.inValid && props.touched) {\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","import React,{Component} from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-order';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\n\r\nclass ContactData extends Component{\r\n\r\n    state={\r\n        orderForm:{\r\n            name: {\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your Name'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            street: {\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Street'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n\r\n            },\r\n            zipcode:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'ZIP CODE'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength:5,\r\n                    maxLength:5\r\n                },\r\n                valid:false,\r\n                touched:false\r\n\r\n            },\r\n            country: {\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Country'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n\r\n            },\r\n            email: {\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your E-Mail'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n\r\n            },\r\n            delieveryMethod: {\r\n                elementType:'select',\r\n                elementConfig:{\r\n                    options:[\r\n                        {value:'fastest',displayValue:'Fastest'},\r\n                        {value:'cheapest',displayValue:'Cheapest'},\r\n                    ]\r\n                },\r\n                value:'fastest',\r\n                valid:true,\r\n                validation:{}\r\n            }\r\n        },\r\n        loading:false,\r\n        formIsValid:false\r\n    }\r\n\r\n    \r\n\r\n    orderHandler = (event)=>{\r\n        event.preventDefault();\r\n         //.json is added at the end for the firebase to work correctly\r\n\r\n        this.setState({loading:true});\r\n\r\n        const formData={};\r\n\r\n        for(let formElementIdentifier in this.state.orderForm){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n\r\n        const order={\r\n            ingredients:this.props.ings,\r\n            price:this.props.price,\r\n            orderData:formData,\r\n            userId:this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order,this.props.token);\r\n\r\n    }\r\n\r\n    checkValidity(value,rules){\r\n        let isValid = true;\r\n\r\n        if(!rules){\r\n            return true;\r\n        }\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event,inputIdentifier)=>{\r\n\r\n        const updatedOrderForm={\r\n            ...this.state.orderForm\r\n        };\r\n\r\n        //cloning more deeply\r\n        const updatedFormElement={\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value , updatedFormElement.validation);\r\n        updatedFormElement.touched=true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n\r\n        for(let inputIdentifier in updatedOrderForm){\r\n            formIsValid=updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({orderForm:updatedOrderForm , formIsValid:formIsValid});    \r\n    }\r\n\r\n    \r\n    render(){\r\n\r\n        const formElementsArray=[];\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.orderForm[key]\r\n            })\r\n        }\r\n\r\n        let form=(<form onSubmit={this.orderHandler}>\r\n            {formElementsArray.map(formElement => (\r\n                <Input \r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType} \r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    inValid={!formElement.config.valid}\r\n                    touched={formElement.config.touched}\r\n                    shouldValidate={formElement.config.validation}\r\n                    changed={(event)=>{this.inputChangedHandler(event,formElement.id)}}/>\r\n            ))}\r\n            <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n        </form>);\r\n\r\n\r\n        if(this.props.loading){\r\n            form=<Spinner />;\r\n        }\r\n\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data !!</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CheckoutSummary from '../../components/Orders/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n\r\n        // this.props.history.replace('/checkout/contactData');\r\n\r\n\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n\r\n        let summary = <Redirect to=\"/\" />\r\n        if (this.props.ings) {\r\n\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler}\r\n                    />\r\n                    <Route path={this.props.match.path + '/contact-data'}\r\n                        component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return summary;\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order =(props)=>{\r\n    const ingredients=[];\r\n    for(let ingredientsName in props.ingredients){\r\n        ingredients.push({name:ingredientsName,amount:props.ingredients[ingredientsName]});\r\n    }\r\n\r\n    const ingredientsOutput = ingredients.map((ig)=>{\r\n        return <span\r\n                style={{textTransform:'capitalize',\r\n                        display:'inline-block',\r\n                        margin:'0 8px',\r\n                        border:'1px solid #ccc',\r\n                        padding:'5px'}} \r\n                key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    })\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p>Ingredients : {ingredientsOutput} </p>\r\n            <p>Price : <strong>USD {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React,{Component} from 'react';\r\nimport axios from '../../axios-order';\r\nimport Order from '../../components/Orders/Order';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component{\r\n\r\n    componentDidMount(){\r\n       this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render(){\r\n        let order = <Spinner />\r\n        if(!this.props.loading){\r\n            order=this.props.orders.map(order => (\r\n                <Order key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={+order.price}/>   \r\n           ))\r\n        }\r\n        return(\r\n            <div>\r\n                {order}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId:state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders,axios));","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actionTypes from '../../store/actions/index';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Auth extends Component{\r\n\r\n    state={\r\n        controls:{\r\n            email: {\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Mail Address'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    isEmail: true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password: {\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required:true,\r\n                    minLength: 6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            }\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/'){\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    checkValidity(value,rules){\r\n        let isValid = true;\r\n\r\n        if(!rules){\r\n            return true;\r\n        }\r\n\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if(rules.isEmail){\r\n            const pattern = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n            isValid = pattern.test(value) && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updateControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value,this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({controls: updateControls});\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup}\r\n        })        \r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();         //this will stop the reloading of page\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value,this.state.isSignup);\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray=[];\r\n        for(let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.controls[key]\r\n            })\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input \r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                inValid={!formElement.config.valid}\r\n                touched={formElement.config.touched}\r\n                shouldValidate={formElement.config.validation}\r\n                changed={(event)=>{this.inputChangedHandler(event,formElement.id)}}/>\r\n        ))\r\n\r\n        if(this.props.loading){\r\n            form=<Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if(this.props.error){\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        let authRedirect = null;\r\n\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n\r\n        return(\r\n            <div className={classes.Auth}>\r\n                {errorMessage}\r\n                {authRedirect}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button \r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGN IN':'SIGN UP'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onAuth: (email,password,isSignup) => dispatch(actionTypes.auth(email, password,isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actionTypes.setAuthRedirectedPath('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onLogout:() => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport './App.css';\nimport {Route,Switch, withRouter,Redirect} from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/index';\n\nclass App extends Component{\n\n  componentDidMount(){\n    this.props.onTryAutoSignup();\n  }\n\n  render(){\n\n    let routes = (\n      <Switch>  \n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\"/>\n      </Switch>\n    );\n\n    if(this.props.isAuthenticated){\n      routes=(\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\"/>  \n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return{\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return{\n    onTryAutoSignup: () => dispatch(actions.authCheckStatus()) \n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__: null || compose;\n \nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app=(\n  <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}